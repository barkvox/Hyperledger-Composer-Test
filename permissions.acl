/**
 * Access control rules. These rules allow anyone to submit AuthorizeAccess
 * and RevokeAccess transaction as well as granting full access to a member's
 * own record. A member can access another member's details if the member has
 * added them to their authorized list.
 */
/**
 * Access control rules for tutorial-network
 */
 rule denyAccessRequestIfNotCreatorOrAssignee {
    description: "deny access Request if not creator or Assignee"
    participant(p): "regit.member.Member"
    operation: ALL  
    resource(r): "regit.transactions.Request"
    condition: (r.creator.getIdentifier() != p.getIdentifier()&&r.assignee.getIdentifier() != p.getIdentifier())
    action: DENY
}

rule userCanOnlyAccessTheirHistory {
    description: "user can only access their info"
    participant(p): "regit.member.Member"
    operation: ALL  
    resource(r): "org.hyperledger.composer.system.HistorianRecord"
    condition: (r.participantInvoking.getIdentifier() != p.getIdentifier())
    action: DENY
}

rule SharedAllowAccessForOwner {
    description: "deny read if not owner and not viewer of information"
    participant(p): "regit.member.Member"
    operation: READ  
    resource(r): "regit.transactions.SharedInformation"
    condition: (r.owner.getIdentifier() != p.getIdentifier()&&r.viewer.getIdentifier() != p.getIdentifier())
    action: DENY
}

rule SharedAllowUpdateDeleteForOwner {
    description: "deny update, delete if not owner"
    participant(p): "regit.member.Member"
    operation: UPDATE, DELETE  
    resource(r): "regit.transactions.SharedInformation"
    condition: (r.owner.getIdentifier() != p.getIdentifier())
    action: DENY
}

rule AllowAccessForOwner {
    description: "deny read if not owner and not viewer of information"
    participant(p): "regit.member.Member"
    operation: READ  
    resource(r): "regit.vault.*"
    condition: (r.owner.getIdentifier() != p.getIdentifier()&&r.viewer.getIdentifier() != p.getIdentifier())
    action: DENY
}

rule AllowUpdateDeleteForOwner {
    description: "deny update, delete if not owner"
    participant(p): "regit.member.Member"
    operation: UPDATE, DELETE  
    resource(r): "regit.vault.Information"
    condition: (r.owner.getIdentifier() != p.getIdentifier())
    action: DENY
}

rule Default {
    description: "Allow all participants access to all resources"
    participant: "ANY"
    operation: ALL
    resource: "regit.vault.*"
    action: ALLOW
}

//JOSHUA PERMISSIONS
rule AuthorizeAccessTransaction {
    description: "Allow all participants to submit AuthorizeAccess transactions"
    participant: "ANY"
    operation: CREATE
    resource: "regit.transactions.AuthorizeAccess"
    action: ALLOW
}

rule RevokeAccessTransaction {
    description: "Allow all participants to submit RevokeAccess transactions"
    participant: "ANY"
    operation: CREATE
    resource: "regit.transactions.RevokeAccess"
    action: ALLOW
}

rule OwnRecordFullAccess {
    description: "Allow all participants full access to their own record"
    participant(p): "regit.member.Member"
    operation: ALL
    resource(r): "regit.member.Member"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule ForeignRecordConditionalAccess {
    description: "Allow participants access to other people's records if granted"
    participant(p): "regit.member.Member"
    operation: ALL
    resource(r): "regit.member.Member"
    condition: (r.authorized && r.authorized.indexOf(p.getIdentifier()) > -1)
    action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}